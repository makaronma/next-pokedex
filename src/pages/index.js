import Head from "next/head";
import PokeItem from "common/components/PokeDisplay/Item";
import Box from "@mui/material/Box";
import TextField from "@mui/material/TextField";
import IconButton from "@mui/material/IconButton";
import SearchIcon from "@mui/icons-material/Search";
import { useState, useEffect, useRef, useCallback } from "react";

export default function Home({ pokes }) {
  const [pokesDisplay, setPokesDisplay] = useState();
  const filterKeyword = useRef();

  useEffect(() => {
    setPokesDisplay(pokes);
  }, [pokes]);

  const handleFilterPoke = useCallback(() => {
    const filteredPokes = pokes.filter((poke) =>
      poke.name.includes(filterKeyword.current.value)
    );
    setPokesDisplay(filteredPokes);
  }, [pokes]);

  return (
    <div>
      <Head>
        <title>PokeDex</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div style={{ display: "flex", alignItems: "end" }}>
        <TextField
          id="standard-basic"
          label="Keyword"
          variant="standard"
          inputRef={filterKeyword}
        />
        <IconButton aria-label="search" color="primary" onClick={handleFilterPoke}>
          <SearchIcon />
        </IconButton>
      </div>
      <h2>Poke List: </h2>

      <Box
        sx={{
          display: "flex",
          flexWrap: "wrap",
          justifyContent: "center",
        }}
      >
        {pokesDisplay &&
          pokesDisplay.map((poke) => (
            <PokeItem
              key={`pokeListItem-${poke.id}`}
              id={poke.id}
              name={poke.name}
              img={poke.image}
            />
          ))}
      </Box>
    </div>
  );
}

export async function getStaticProps() {
  const res = await fetch(
    `https://pokeapi.co/api/v2/pokemon?offset=0&limit=${process.env.POKEAMOUNT}`
  );
  const { results } = await res.json();
  const urls = results.map((r) => r.url);

  const pokes = await Promise.all(
    urls.map(async (url) => {
      const res = await fetch(url);
      return res.json();
    })
  );
  const pokesModified = pokes.map(({ id, name, sprites, types }) => ({
    id,
    name,
    image: sprites.front_default,
    types,
  }));

  return {
    props: {
      pokes: pokesModified,
    },
  };
}
