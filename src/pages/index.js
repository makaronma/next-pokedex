import Head from "next/head";
import Box from "@mui/material/Box";

import PokeItem from "common/components/PokeDisplay/Item";
import PokesContainer from "common/components/PokeDisplay/ItemsContainer";
import AdvanceSearch from "common/components/PokeDisplay/AdvanceSearch";
import { useState, useEffect, useRef, useCallback } from "react";
import { getAllPokes, getAllTypesName } from "common/utils/pokeApi";
import NormalSearch from "common/components/PokeDisplay/NormalSearch";
import LoadMoreBtn from "common/components/PokeDisplay/LoadMoreBtn";

export default function Home({ pokes, types, loadMoreAmount }) {
  const [pokesBeforeDisplay, setPokesBeforeDisplay] = useState([]);
  const [pokesDisplay, setPokesDisplay] = useState([]);
  const [page, setPage] = useState(0);
  const filterKeyword = useRef();

  // Init pokes array
  useEffect(() => {
    setPokesBeforeDisplay(pokes);
  }, [pokes]);

  // Init and Loadmore (change pokes array)
  useEffect(() => {
    const start = page * loadMoreAmount;
    const end = start + loadMoreAmount;
    setPokesDisplay((prev) => [
      ...prev,
      ...pokesBeforeDisplay.slice(start, end),
    ]);
  }, [pokesBeforeDisplay, page, loadMoreAmount]);

  const updatePokes = (newPokes) => {
    setPokesDisplay([]);
    setPokesBeforeDisplay(newPokes);
    setPage(0);
  };

  // filter and reset poke array
  const handleFilterPoke = useCallback(() => {
    const regex = new RegExp(`${filterKeyword.current.value}`);
    const matchName = (poke) => {
      return poke.name.match(regex);
    };

    const matchID = (poke) => {
      return String(poke.id).match(regex);
    };

    const checkMatchCriteria = (poke) => {
      return matchName(poke) || matchID(poke);
    };

    const filteredPokes = pokes.filter((poke) => checkMatchCriteria(poke));
    updatePokes(filteredPokes);
  }, [pokes]);

  return (
    <div>
      <Head>
        <title>PokeDex</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <NormalSearch
        filterKeyword={filterKeyword}
        handleFilterPoke={handleFilterPoke}
      />
      <AdvanceSearch types={types} updatePokes={updatePokes} pokes={pokes} />

      <Box sx={{ minHeight: 850 }}>
        <PokesContainer>
          {pokesDisplay &&
            pokesDisplay.map((poke) => (
              <PokeItem
                key={`pokeListItem-${poke.id}`}
                id={poke.id}
                name={poke.name}
                img={poke.image}
              />
            ))}
        </PokesContainer>

        {pokesBeforeDisplay.length <= page * loadMoreAmount + loadMoreAmount ? (
          "NO More"
        ) : (
          <LoadMoreBtn setPage={setPage} />
        )}
      </Box>
    </div>
  );
}

export async function getStaticProps() {
  const pokes = await getAllPokes();
  const types = await getAllTypesName();
  const loadMoreAmount = parseInt(process.env.LOADMOREAMOUNT);

  return {
    props: {
      pokes,
      types,

      loadMoreAmount,
    },
  };
}
