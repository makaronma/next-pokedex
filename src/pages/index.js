import Head from "next/head";
import TextField from "@mui/material/TextField";
import IconButton from "@mui/material/IconButton";
import SearchIcon from "@mui/icons-material/Search";

import PokeItem from "common/components/PokeDisplay/Item";
import ItemsContainer from "common/components/PokeDisplay/ItemsContainer";
import AdvanceSearch from "common/components/PokeDisplay/AdvanceSearch";
import { useState, useEffect, useRef, useCallback } from "react";
import { getAllPokes, getAllTypesName } from "common/utils/pokeapi";

export default function Home({ pokes, types }) {
  const [pokesDisplay, setPokesDisplay] = useState();
  const filterKeyword = useRef();

  useEffect(() => {
    setPokesDisplay(pokes);
  }, [pokes]);

  const checkMatchCriteria = (poke) => {
    const regex = new RegExp(`${filterKeyword.current.value}`);
    return poke.name.match(regex);
  };

  const handleFilterPoke = useCallback(() => {
    const filteredPokes = pokes.filter((poke) => checkMatchCriteria(poke));
    console.log(pokes);
    setPokesDisplay(filteredPokes);
  }, [pokes]);

  return (
    <div>
      <Head>
        <title>PokeDex</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div style={{ display: "flex", alignItems: "end" }}>
        <TextField
          id="standard-basic"
          label="Keyword"
          variant="standard"
          inputRef={filterKeyword}
        />
        <IconButton aria-label="search" onClick={handleFilterPoke}>
          <SearchIcon />
        </IconButton>
        <AdvanceSearch />
      </div>
      <h2>Poke List: </h2>

      <ItemsContainer>
        {pokesDisplay &&
          pokesDisplay.map((poke) => (
            <PokeItem
              key={`pokeListItem-${poke.id}`}
              id={poke.id}
              name={poke.name}
              img={poke.image}
            />
          ))}
      </ItemsContainer>
    </div>
  );
}

export async function getStaticProps() {
  const pokes = await getAllPokes();
  const types = await getAllTypesName();

  return {
    props: {
      pokes,
      types,
    },
  };
}
